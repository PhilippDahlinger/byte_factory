import json

from bython_compiler.create_blueprint import blueprint_to_json, json_to_blueprint


def change_addresses(base_json, start_address=0):
    entities = base_json["blueprint"]["entities"]

    start_y = -269.5
    for y in range(573):
        current_y = start_y - y
        for entity in entities:
            if entity["name"] == "decider-combinator":
                pos = entity["position"]
                if pos["y"] == current_y:
                    # change address to y + start_address
                    entity["control_behavior"]["decider_conditions"]["conditions"][1]["constant"] = y + start_address

    return base_json


if __name__ == "__main__":
    base_blueprint = ""
    base_json = blueprint_to_json(base_blueprint)
    # save json
    with open("temp.json", "w") as file:
        json.dump(base_json, file, indent=4)
    ys = [entity["position"]["y"] for entity in base_json["blueprint"]["entities"]]
    ys.sort()
    print(ys[0], ys[-1])
    for start_address in [1, 1 + 573, 1 + 2 * 573, 1 + 3 * 573]:
        updated_json = change_addresses(base_json, start_address=start_address)
        print(f"start_address {start_address}:")
        print(json_to_blueprint(updated_json))
    # entities = base_json["blueprint"]["entities"]
    # for entity in entities:
    #     if entity["name"] == "decider-combinator":
    #         print(entity["position"])
