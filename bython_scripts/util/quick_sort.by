r10 = load_data()
r9 = 1
# r11 = int_user[1]
r1 = quick_sort(r9, r10)


exit(success)

def load_data():
    r1 = 1
    r2 = rom[r1]
    while r2 != -1:
        mem[r1] = r2
        r1 = r1 + 1
        r2 = rom[r1]
    r1 = r1 - 1
    return r1

def quick_sort(r1, r2):
    if r1 < r2:
        # partition
        r4 = mem[r2]  # r4 = pivot
        r3 = r1 - 1  # r3 = i index,
        r5 = r1  # r5 = j index
        while r5 < r2:
            r7 = mem[r5]
            if r7 <= r4:
                r3 = r3 + 1
                # swap
                r6 = mem[r3]
                mem[r3] = r7
                mem[r5] = r6
            r5 = r5 + 1
        r3 = r3 + 1
        r6 = mem[r3]
        mem[r2] = r6
        mem[r3] = r4
        r3 = r3 - 1
        r4 = quick_sort(r1, r3)
        r3 = r3 + 2
        r4 = quick_sort(r3, r2)
    return r1



